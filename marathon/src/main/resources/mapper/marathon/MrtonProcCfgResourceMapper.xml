<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.marathon.mapper.MrtonProcCfgResourceMapper" >
  <resultMap id="BaseResultMap" type="com.marathon.domain.MrtonProcCfgResource" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cfg_proc_id" property="cfgProcId" jdbcType="VARCHAR" />
    <result column="resource_name" property="resourceName" jdbcType="VARCHAR" />
    <result column="has_template" property="hasTemplate" jdbcType="TINYINT" />
    <result column="resource_url" property="resourceUrl" jdbcType="VARCHAR" />
    <result column="reserve1" property="reserve1" jdbcType="VARCHAR" />
    <result column="reserve2" property="reserve2" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cfg_proc_id, resource_name, has_template, resource_url, reserve1, reserve2, del_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.marathon.domain.MrtonProcCfgResourceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mrton_proc_cfg_resoures
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from mrton_proc_cfg_resoures
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mrton_proc_cfg_resoures
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.marathon.domain.MrtonProcCfgResourceExample" >
    delete from mrton_proc_cfg_resoures
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.marathon.domain.MrtonProcCfgResource" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mrton_proc_cfg_resoures (cfg_proc_id, resource_name, has_template, 
      resource_url, reserve1, reserve2, 
      del_flag)
    values (#{cfgProcId,jdbcType=VARCHAR}, #{resourceName,jdbcType=VARCHAR}, #{hasTemplate,jdbcType=TINYINT}, 
      #{resourceUrl,jdbcType=VARCHAR}, #{reserve1,jdbcType=VARCHAR}, #{reserve2,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.marathon.domain.MrtonProcCfgResource" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mrton_proc_cfg_resoures
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cfgProcId != null" >
        cfg_proc_id,
      </if>
      <if test="resourceName != null" >
        resource_name,
      </if>
      <if test="hasTemplate != null" >
        has_template,
      </if>
      <if test="resourceUrl != null" >
        resource_url,
      </if>
      <if test="reserve1 != null" >
        reserve1,
      </if>
      <if test="reserve2 != null" >
        reserve2,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cfgProcId != null" >
        #{cfgProcId,jdbcType=VARCHAR},
      </if>
      <if test="resourceName != null" >
        #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="hasTemplate != null" >
        #{hasTemplate,jdbcType=TINYINT},
      </if>
      <if test="resourceUrl != null" >
        #{resourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null" >
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null" >
        #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.marathon.domain.MrtonProcCfgResourceExample" resultType="java.lang.Integer" >
    select count(*) from mrton_proc_cfg_resoures
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mrton_proc_cfg_resoures
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cfgProcId != null" >
        cfg_proc_id = #{record.cfgProcId,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceName != null" >
        resource_name = #{record.resourceName,jdbcType=VARCHAR},
      </if>
      <if test="record.hasTemplate != null" >
        has_template = #{record.hasTemplate,jdbcType=TINYINT},
      </if>
      <if test="record.resourceUrl != null" >
        resource_url = #{record.resourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve1 != null" >
        reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null" >
        reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mrton_proc_cfg_resoures
    set id = #{record.id,jdbcType=INTEGER},
      cfg_proc_id = #{record.cfgProcId,jdbcType=VARCHAR},
      resource_name = #{record.resourceName,jdbcType=VARCHAR},
      has_template = #{record.hasTemplate,jdbcType=TINYINT},
      resource_url = #{record.resourceUrl,jdbcType=VARCHAR},
      reserve1 = #{record.reserve1,jdbcType=VARCHAR},
      reserve2 = #{record.reserve2,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.marathon.domain.MrtonProcCfgResource" >
    update mrton_proc_cfg_resoures
    <set >
      <if test="cfgProcId != null" >
        cfg_proc_id = #{cfgProcId,jdbcType=VARCHAR},
      </if>
      <if test="resourceName != null" >
        resource_name = #{resourceName,jdbcType=VARCHAR},
      </if>
      <if test="hasTemplate != null" >
        has_template = #{hasTemplate,jdbcType=TINYINT},
      </if>
      <if test="resourceUrl != null" >
        resource_url = #{resourceUrl,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null" >
        reserve1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null" >
        reserve2 = #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.marathon.domain.MrtonProcCfgResource" >
    update mrton_proc_cfg_resoures
    set cfg_proc_id = #{cfgProcId,jdbcType=VARCHAR},
      resource_name = #{resourceName,jdbcType=VARCHAR},
      has_template = #{hasTemplate,jdbcType=TINYINT},
      resource_url = #{resourceUrl,jdbcType=VARCHAR},
      reserve1 = #{reserve1,jdbcType=VARCHAR},
      reserve2 = #{reserve2,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>