<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.marathon.mapper.MrtonProcWorkflowMapper" >
  <resultMap id="BaseResultMap" type="com.marathon.domain.MrtonProcWorkflow" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="proc_id" property="procId" jdbcType="VARCHAR" />
    <result column="workflow_id" property="workflowId" jdbcType="INTEGER" />
    <result column="node_id" property="nodeId" jdbcType="INTEGER" />
    <result column="del_flag" property="delFlag" jdbcType="TINYINT" />
    <result column="create_by" property="createBy" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, proc_id, workflow_id, node_id, del_flag, create_by, create_time, update_by, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.marathon.domain.MrtonProcWorkflowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mrton_proc_workflow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from mrton_proc_workflow
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mrton_proc_workflow
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.marathon.domain.MrtonProcWorkflowExample" >
    delete from mrton_proc_workflow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.marathon.domain.MrtonProcWorkflow" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mrton_proc_workflow (proc_id, workflow_id, node_id, 
      del_flag, create_by, create_time, 
      update_by, update_time)
    values (#{procId,jdbcType=VARCHAR}, #{workflowId,jdbcType=INTEGER}, #{nodeId,jdbcType=INTEGER}, 
      #{delFlag,jdbcType=TINYINT}, #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.marathon.domain.MrtonProcWorkflow" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mrton_proc_workflow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="procId != null" >
        proc_id,
      </if>
      <if test="workflowId != null" >
        workflow_id,
      </if>
      <if test="nodeId != null" >
        node_id,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="procId != null" >
        #{procId,jdbcType=VARCHAR},
      </if>
      <if test="workflowId != null" >
        #{workflowId,jdbcType=INTEGER},
      </if>
      <if test="nodeId != null" >
        #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.marathon.domain.MrtonProcWorkflowExample" resultType="java.lang.Integer" >
    select count(*) from mrton_proc_workflow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mrton_proc_workflow
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.procId != null" >
        proc_id = #{record.procId,jdbcType=VARCHAR},
      </if>
      <if test="record.workflowId != null" >
        workflow_id = #{record.workflowId,jdbcType=INTEGER},
      </if>
      <if test="record.nodeId != null" >
        node_id = #{record.nodeId,jdbcType=INTEGER},
      </if>
      <if test="record.delFlag != null" >
        del_flag = #{record.delFlag,jdbcType=TINYINT},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mrton_proc_workflow
    set id = #{record.id,jdbcType=INTEGER},
      proc_id = #{record.procId,jdbcType=VARCHAR},
      workflow_id = #{record.workflowId,jdbcType=INTEGER},
      node_id = #{record.nodeId,jdbcType=INTEGER},
      del_flag = #{record.delFlag,jdbcType=TINYINT},
      create_by = #{record.createBy,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.marathon.domain.MrtonProcWorkflow" >
    update mrton_proc_workflow
    <set >
      <if test="procId != null" >
        proc_id = #{procId,jdbcType=VARCHAR},
      </if>
      <if test="workflowId != null" >
        workflow_id = #{workflowId,jdbcType=INTEGER},
      </if>
      <if test="nodeId != null" >
        node_id = #{nodeId,jdbcType=INTEGER},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.marathon.domain.MrtonProcWorkflow" >
    update mrton_proc_workflow
    set proc_id = #{procId,jdbcType=VARCHAR},
      workflow_id = #{workflowId,jdbcType=INTEGER},
      node_id = #{nodeId,jdbcType=INTEGER},
      del_flag = #{delFlag,jdbcType=TINYINT},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getMyApproveList" resultType="com.marathon.domain.beans.WorkFlowApproveListBean">
    SELECT
      procwork.proc_id as procId,
      marathon.marathon_name as mrtonName,
      cfg.proc_name as procName,
      node.node_name AS nodeName
    FROM
        mrton_proc_workflow procwork
    INNER JOIN workflow_approver wa ON procwork.node_id = wa.node_id
    INNER JOIN sys_user_role ur ON ur.role_id = wa.role_id
    INNER JOIN workflow_node node ON wa.node_id = node.id
    INNER JOIN mrton_proc_info proc ON procwork.proc_id = proc.id
    INNER JOIN mrton_proc_cfg cfg ON proc.proc_id = cfg.proc_id
    INNER JOIN marathon_info marathon ON proc.marathon_id = marathon.marathon_uuid
    WHERE
        ur.user_id = #{userId}
    AND procwork.workflow_id = #{workflowId}
  </select>
</mapper>